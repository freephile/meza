##################### Elasticsearch Configuration #####################
# For information on supported formats and syntax for the config file, see
# <http://elasticsearch.org/guide/en/elasticsearch/reference/current/setup-configuration.html>


################################### Cluster ###################################

# Cluster name identifies your cluster for auto-discovery. If you're running
# multiple clusters on the same network, make sure you're using unique names.
#
cluster.name: "{{ elasticsearch_cluster_name }}"


#################################### Node #####################################

# Node names are generated dynamically on startup, so you're relieved
# from configuring them manually. You can tie this node to a specific name:
#
node.name: "{{ elasticsearch_node_name }}"



#################################### Paths ####################################

# Path to directory containing configuration (this file and logging.yml):
# deprecated
# path.conf: /etc/elasticsearch

# Path to directory where to store index data allocated for this node.
#
path.data: {{ m_meza_data }}/elasticsearch/data


# Path to log files:
#
path.logs: {{ m_meza_data }}/elasticsearch/log

# Workaround for openjdk policy update which breaks elasticsearch's ability
# to read /etc/pki/ca-trust/extracted/java/cacerts.
#
# Fixes xpack SSL java access denied at ES startup.
#
# Probably not the best way to do this. Suggestions welcome
# xpack.ssl.truststore.path: /etc/elasticsearch/cacerts-java-extracted
# xpack.ssl.truststore.password: changeit
# reindex.ssl.truststore.path: /etc/elasticsearch/cacerts-java-extracted
# reindex.ssl.truststore.password: changeit

# ---------------------------------- Security ----------------------------------
#
#                                 *** WARNING ***
#
# Elasticsearch security features are not enabled by default.
# These features are free, but require configuration changes to enable them.
# This means that users don't have to provide credentials and can get full access
# to the cluster. Network connections are also not encrypted.
#
# To protect your data, we strongly encourage you to enable the Elasticsearch security features.
# Refer to the following documentation for instructions.
#
# https://www.elastic.co/guide/en/elasticsearch/reference/7.10/configuring-stack-security.html
#
# enable basic security
# https://www.elastic.co/guide/en/elasticsearch/reference/7.10/security-minimal-setup.html
# xpack.security.enabled: true

# set for monolith environments
# either need to create an 'env' variable in Ansible to detect if this is a monolith
# and then template this with jinja 'if' statements
# Or, we may need to not use single-node at all if it pre-determines a "development" mode-only instance.
# @todo put this behind a test { % if env == 'monolith' % }{ % endif % }
discovery.type: single-node
#   xpack.security.http.ssl.enabled: true
#   xpack.security.http.ssl.key: /etc/elasticsearch/ssl/http-key.key
#   xpack.security.http.ssl.certificate: /etc/elasticsearch/ssl/http-cert.crt
#
# however, recall that meza (when deployed as a monolith) runs all services (like elasticsearch)
# behind an SSL terminating load balancer/proxy. This means that the elasticsearch service is
# not accessible to the network as such.
#
# However, we do need elastic search to work in FIPS mode so we need the folowing security settings per
# https://www.elastic.co/guide/en/elasticsearch/reference/current/security-settings.html#password-hashing-settings
# but note that the settings below only tell Elasticsearch to avoid non-FIPS approved algorithms.
# It does not configure the underlying JVM to run in FIPS mode. That must be addressed in the JVM config separately.
# Ref1: https://discuss.elastic.co/t/issues-trying-to-enable-fips-140-2-on-centos-8/300505
# Ref2: https://www.elastic.co/support/matrix#matrix_jvm
#
# Require only FIPS aproved algothithms
#xpack.security.fips_mode.enabled: true
#xpack.security.authc.password_hashing.algorithm: pbkdf2_stretch

