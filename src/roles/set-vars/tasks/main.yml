---

#
# Retrieve Meza install path by finding realpath of Meza.py from /user/bin/meza
#
- name: Get Meza install path
  shell: "dirname $(dirname $(dirname $(dirname $(realpath $(which meza)))))"
  register: register_install_path
  # In --check mode, the shell command will not run, which means there will be no .stdout to pass to set_fact:
  # Since we know THIS shell command has no side-effects, we need to force it to run ALWAYS, even in --check mode.
  # To force a task to run (which could make changes to the system), even when the playbook is called with --check,
  # set check_mode: false.
  check_mode: false

- set_fact:
    m_install: "{{ register_install_path.stdout }}"

#
# OS-Family vars
# Note: OS-family vars come before defaults.yml, so they can drive defaults.yml values
#
- name: Set OS-family specific variables
  include_vars:
    file: "{{ m_install }}/meza/config/{{ ansible_distribution_file_variety }}.yml"

#
# Meza-core variables
#
- name: Set meza-core path variables
  include_vars:
    file: "{{ m_install }}/meza/config/paths.yml"

- name: Set meza-core default variables
  include_vars:
    file: "{{ m_install }}/meza/config/defaults.yml"

#FIXME remove this
# - ansible.builtin.debug: { msg: "{{ m_i18n }} TEST {{ m_db_replication_log_pos }} " }

#
# Gluster mods
#
- name: If using gluster (app_servers > 1), override m_uploads_dir
  set_fact:
    m_uploads_dir: "{{ gluster_mount_dir }}"
  when: "'app_servers' in groups and groups['app_servers']|length|int > 1"

#
# Public config
#
- name: Set meza local public variables
  include_vars:
    file: "{{ m_local_public }}/public.yml"
  # Ingore errors so this file is not required to be included
  failed_when: False

- name: Get individual wikis dirs from localhost
  find:
    paths: "{{ m_local_public }}/wikis/"
    file_type: directory
  register: wikis_dirs
  delegate_to: localhost
  run_once: true

- set_fact:
    list_of_wikis: "{{ wikis_dirs.files | map(attribute='path') | map('basename') | list }}"

- name: "Set meza environment-specific public variables for env={{ env }}"
  include_vars:
    file: "{{ m_local_public }}/env/{{ env }}.yml"
  # Ingore errors so this file is not required to be included
  failed_when: False

#
# Secret config
#
- name: Set meza local secret variables
  include_vars:
    file: "{{ m_local_secret }}/{{ env }}/secret.yml"
  # Can't load secret.yml when it doesn't exist yet, so skip this while setting
  # up an environment
  when: not allow_missing_secret_config|default(false)
