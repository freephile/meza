#!/bin/sh
set -euo pipefail
IFS=$'\n\t'

echo "******* Generating elasticsearch index for $wiki_id *******"

# Lock to prevent concurrent rebuilds for the same wiki
LOCKFILE="/var/lock/meza-elastic-build-${wiki_id}.lock"
if [ ! -w "$(dirname "$LOCKFILE")" ]; then
	LOCKFILE="/tmp/meza-elastic-build-${wiki_id}.lock"
fi
exec 200>"$LOCKFILE"
flock -n 200 || { echo "Another index build is running for $wiki_id; exiting."; exit 1; }
trap 'echo "Caught signal, releasing lock"; flock -u 200; rm -f "$LOCKFILE"; exit 1' INT TERM EXIT

disable_search_file="{{ m_deploy }}/public/wikis/$wiki_id/postLocalSettings.d/disable-search-update.php"

# disable search update in wiki-specific settings
echo -e "<?php\n\$wgDisableSearchUpdate = true;\n" > "$disable_search_file"

# Run script to generate elasticsearch index mappings/config
cd "{{ m_mediawiki }}"
WIKI=$wiki_id {{ m_mediawiki }}/maintenance/run CirrusSearch:UpdateSearchIndexConfig --startOver

# Determine indices for this wiki (typical CirrusSearch index pattern)
index_pattern="wiki_${wiki_id}_*"
# Get indices; be tolerant if none exist yet
indices=$(curl --silent "localhost:9200/_cat/indices/$index_pattern?h=index" 2>/dev/null || true)

if [ -n "$indices" ]; then
	echo "Setting refresh_interval=-1 and number_of_replicas=0 for indices matching $index_pattern"
	for idx in $indices; do
		echo "  $idx"
		curl -s -XPUT "localhost:9200/$idx/_settings" -H 'Content-Type: application/json' -d '{"index":{"refresh_interval":"-1","number_of_replicas":0}}' | jq -r '. || true' >/dev/null 2>&1 || true
	done
else
	echo "No existing indices matching $index_pattern found; will create during indexing"
fi

# Bootstrap the search index (bulk indexing). These commands can take some time.
# We deliberately run with refresh disabled above for performance.
WIKI=$wiki_id {{ m_mediawiki }}/maintenance/run CirrusSearch:ForceSearchIndex --skipLinks --indexOnSkip
WIKI=$wiki_id {{ m_mediawiki }}/maintenance/run CirrusSearch:ForceSearchIndex --skipParse

# Restore index settings (refresh interval and replicas) so Es can serve searches normally
if [ -n "$indices" ]; then
	echo "Restoring refresh_interval and number_of_replicas for indices matching $index_pattern"
	for idx in $indices; do
		echo "  $idx"
		curl -s -XPUT "localhost:9200/$idx/_settings" -H 'Content-Type: application/json' -d '{"index":{"refresh_interval":"1s","number_of_replicas":1}}' | jq -r '. || true' >/dev/null 2>&1 || true
	done
fi

# Remove search-update disable in wiki-specific settings
rm -f "$disable_search_file"

echo "******* Elastic Search build index complete! *******"

# Release lock and cleanup
flock -u 200 || true
rm -f "$LOCKFILE" || true
trap - INT TERM EXIT
