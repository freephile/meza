---

- name: Ensure prerequisites for sqlsrv in place
  yum:
    name:
      - re2c
      - gcc-c++
    state: present
    lock_timeout: 180  # wait up to 3 minutes for a lock ansible/ansible#57189

# Install ODBC driver
- name: install mssql-server repo (CentOS, RedHat)
  retries: 5
  delay: 5
  register: repo_result
  until: repo_result is success
  get_url:
    url: https://packages.microsoft.com/config/rhel/8/prod.repo
    dest: /etc/yum.repos.d/mssql-release.repo
  when: ansible_distribution in ['CentOS', 'RedHat']

- name: Ensure conflicting ODBC drivers removed
  yum:
    name:
      - unixODBC-utf16
      - unixODBC-utf16-devel
    lock_timeout: 180  # wait up to 3 minutes for a lock ansible/ansible#57189
    state: absent

- name: install MS ODBC driver package
  yum:
    lock_timeout: 180  # wait up to 3 minutes for a lock ansible/ansible#57189
    name: msodbcsql17
    state: latest
  environment:
    ACCEPT_EULA: 'y'
  notify:
  - restart apache
  - restart php-fpm

- name: install ODBC driver devel package
  yum:
    lock_timeout: 180  # wait up to 3 minutes for a lock ansible/ansible#57189
    name: unixODBC-devel
    state: latest


# If mssql tools desired:
# sudo ACCEPT_EULA=Y yum install mssql-tools
# echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bash_profile
# echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
# source ~/.bashrc


#
# Compiling the PHP drivers with PECL with PHP 7.2 requires a more recent GCC than the default:
#
#
# # CENTOS: sudo yum install centos-release-scl
# - name: install centos-release-scl
#   yum:
#     name: centos-release-scl
#     state: latest
#   when: ansible_distribution == "CentOS"
#
# - name: install devtoolset-7 on CentOS
#   yum:
#     name: devtoolset-7
#     state: latest
#   when: ansible_distribution == "CentOS"
#
# # REDHAT: sudo yum-config-manager --enable rhel-server-rhscl-7-rpms
# - name: enable rhel-server-rhscl-7-rpms
#   yum:
#     name: devtoolset-7
#     state: latest
#     enablerepo: rhel-server-rhscl-7-rpms
#   when: ansible_distribution == "RedHat"
#
# - name: Enable devtoolset-7 with SCL
#   shell: "scl enable devtoolset-7 bash"


- name: Ensure PEAR channel up-to-date
  shell: pear channel-update pecl.php.net

#
# Install sqlsrv drivers from PECL
#
# This gives false failures, both done this way (pecl install sqlsrv) as well
# as using the Ansible PEAR module. With this method it simply says "already
# installed" then gives a non-zero return code (an error), but does nothing
# else (it should have a way to make that not cause an error). With the Ansible
# module it actually rebuilds the package from source before erroring, which is
# a waste (hence switching to "pecl install ..."). In either case, it
# successfully installs the correct version.
#
# In the future, perhaps install using Remi repo:
#   sudo yum install php-sqlsrv php-pdo_sqlsrv
#
- name: Install sqlsrv PECL packages
  shell: pecl install sqlsrv
  ignore_errors: true
  notify:
    - restart apache
    - restart php-fpm
- name: Install pdo_sqlsrv PECL packages
  shell: pecl install pdo_sqlsrv
  ignore_errors: true
  notify:
    - restart apache
    - restart php-fpm

- template:
    src: 30-pdo_sqlsrv.ini.j2
    dest: /etc/php.d/30-pdo_sqlsrv.ini
    owner: root
    group: root
    mode: 0644
  notify:
    - restart apache
    - restart php-fpm

- template:
    src: 20-sqlsrv.ini.j2
    dest: /etc/php.d/20-sqlsrv.ini
    owner: root
    group: root
    mode: 0644
  notify:
    - restart apache
    - restart php-fpm
